# Automata
# 2022 Spring CS1 Final Mock Exam
# P06_nofail의 모범 답안입니다.
# CS1 수준에서의 모범 답안이므로, 최선의 해답이 아닐 수도 있습니다.
# 주석은 코드 이해를 돕기 위해 작성했고, 해설 목적은 아닙니다.
# 자세한 해설은 같이 첨부된 Editorial을 참고해 주세요.

def nofail(X, A, B):
    tofind = False
    # 다음으로 어떤 값을 찾아야 하는지를 저장합니다.
    # 우선은 첫 번째 연속된 F의 시작 지점을 찾는 것이 목표이므로, F를 저장해 놓습니다.
    consF = 0
    # 연속된 F들의 개수를 저장합니다.
    for i in range(len(X)):
        if X[i] == tofind:
            # 만약 찾아야 하는 값을 발견한다면, 아래 내용을 실행합니다.
            if tofind == False:
                consF += 1
                # 만약 F를 찾으려고 했고, 그것을 찾았다면 연속된 F들의 개수를 1 늘려 줍니다.
            tofind = not tofind
            # 만약 F를 찾으려고 했고, 그것을 찾았다면 연속된 F들의 시작 지점을 찾은 것입니다.
            # 그러므로 일단 연속된 F들이 언제 끝나는지를 찾아야 합니다.
            # 그러므로 다음으로는 P를 찾아야 합니다.
            # 만약 P를 찾으려고 했고, 그것을 찾았다면 연속된 F들의 끝 지점을 찾은 것입니다.
            # 그러므로 다음 연속된 F들을 찾아야 합니다.
            # 그러므로 다음으로는 F를 찾아야 합니다.
    if consF == 0:
        return 0
        # 연속된 F들을 발견하지 못했다면, F 자체가 없는 것이므로 어떤 행동도 할 필요 없습니다.
        # 따라서, 0을 반환합니다.
    else:
        return ((consF - 1) * min(A,B)) + A
        # 그렇지 않다면, 위 값을 반환합니다.
        # 이 수식의 유도 과정은 Editorial을 참고해 주세요.
        